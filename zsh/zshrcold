sed -n '/---/!p;//q' ~/dox/todo

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
	source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#ZSH_THEME="robbyrussell"
#autoload -U colors && colors
#PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "

#ENABLE_CORRECTION="true"
unsetopt correct_all
#zmodload zsh/zprof

plugins=(git)


RED="09"
GREEN="0a"
YELLOW="0b"
BLUE="0c"
MAGENTA="0d"
CYAN="0e"
WHITE="0f"
# User configuration
BLK="0B" CHR="0B" DIR="6F" EXE="75" REG="00" HARDLINK="06" SYMLINK="B0" MISSING="00" ORPHAN="09" FIFO="06" SOCK="0B" OTHER="C4"
BLK="00" CHR="00" DIR="0e" EXE="0b" REG="00" HARDLINK="0e" LINK="0a" MISSING="00" ORPHAN="09" FIFO="0e" SOCK="00" OTHER="05"
DIR=$BLUE
EXE=$GREEN
SOCK=$MAGENTA
FIFO=$YELLOW
LINK=$CYAN

export NNN_FCOLORS="$BLK$CHR$DIR$EXE$REG$HARDLINK$LINK$MISSING$ORPHAN$FIFO$SOCK$OTHER"
export NNN_COLORS='6543'
export NNN_READER=preview
export NNN_OPENER=nuke
export NNN_TRASH=2
export EDITOR=nvim
export DBUS_SESSION_BUS_ADDRESS="unix:path=$DBUS_LAUNCHD_SESSION_BUS_SOCKET"
set -o vi
export PATH="/Library/Frameworks/Python.framework/Versions/3.8/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"

bindkey ^S fzf-file-widget

[ -f ${XDG_CONFIG_HOME:-$HOME/.config}/fzf/fzf.zsh ] && source ${XDG_CONFIG_HOME:-$HOME/.config}/fzf/fzf.zsh
GIT_FILES='git rev-parse --show-toplevel 2> /dev/null'
export FZF_DEFAULT_COMMAND="fd . -t f --hidden --follow --exclude .git --strip-cwd-prefix"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd . -t d --follow --strip-cwd-prefix"
export FZF_DEFAULT_OPTS='--border'
export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
--color=fg:7,hl:11
--color=fg+:15,bg+:0,hl+:3
--color=info:14,prompt:12,pointer:11
--color=marker:4,spinner:#73d0ff,header:#d4bfff'


alias tt='tt -noskip'
alias tq='tt -notheme -quotes en'
alias tw='tt -theme gruvbox -bold'
alias bbrew='brew formulae | fzf'
alias todo='f() {echo -e "$1\n$(cat ~/.todo)" > ~/.todo};f'
alias getsh='echo "$SHLVL"'
alias vi='nvim -S ~/.vim/_temp_.vim'
alias vim='nvim'

gts () {
	rm -rf ~/.local/share/Trash/files/$1
}
alias gte='rm -rf ~/.local/share/Trash/files/* && rm -rf ~/.local/share/Trash/info/*'
alias gtl='ls -a ~/.local/share/Trash/files'
alias gtr='gio trash --restore'

alias dtf='/usr/bin/git --git-dir=/Users/deangao/repos/per/dotfiles/ --work-tree=/Users/deangao'

# source /usr/local/opt/nvm/nvm.sh

#eval $(thefuck --alias)
if command -v thefuck >/dev/null 2>&1; then
  fuck() {
    eval "$(thefuck --alias)" && fuck
  }
fi


to ()
{
	sed -n '/---/!p;//q' ~/.todo
}

# for each file
fef ()
{
	for file in $(fd); $1 $file $2
}

n ()
{
	if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
		echo "nnn is already running"
		return
	fi
	export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
	nnn -c "$@"
	if [ -f "$NNN_TMPFILE" ]; then
		. "$NNN_TMPFILE"
		rm -f "$NNN_TMPFILE" > /dev/null
	fi
}


timezsh()
{
	for i in $(seq 1 10); do time zsh -i -c exit; done
}

gitall()
{
	git add .;
	git status -s;
	git commit -m "$1"
	STATUS=$(git status -s);
	if [ -z "$STATUS" ]; then
		echo "\nfully commited\n"
	else
		echo "$STATUS"
	fi
}

brewall()
{
	brew update
	brew upgrade
	brew autoremove
	brew cleanup
}

hide()
{
	tar -zcf output.tar.gz $1
	mv output.tar.gz $2
}

show()
{
	tar -zxf $1
}

ymd()
{
	vim ~/repos/per/personal/dia/di/$(date +%F).md
}

source /usr/local/opt/powerlevel10k/powerlevel10k.zsh-theme
[[ ! -f ${XDG_CONFIG_HOME:-$HOME/.config}/p10k/p10k.zsh ]] || source ${XDG_CONFIG_HOME:-$HOME/.config}/p10k/p10k.zsh


# The following lines were added by compinstall

zstyle ':completion:*' completer _complete _ignored
zstyle ':completion:*' matcher-list '' 'm:{[:lower:]}={[:upper:]}'
zstyle :compinstall filename '/Users/deangao/.zshrc'
#
autoload -Uz compinit && compinit

# End of lines added by compinstall

# [ -f "/Users/deangao/.ghcup/env" ] && source "/Users/deangao/.ghcup/env" # ghcup-env
